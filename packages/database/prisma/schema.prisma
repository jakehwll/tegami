// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Feed {
  id          Int       @id @default(autoincrement())
  name        String
  feedUrl     String
  siteUrl     String
  publishedAt DateTime
  updatedAt   DateTime? @updatedAt
  createdAt   DateTime? @default(now())
  ownerId     Int

  entries Entry[]
  owner   User    @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  updatedAt DateTime? @updatedAt
  createdAt DateTime? @default(now())
}

model Entry {
  id          Int       @id @default(autoincrement())
  title       String?
  description String?
  url         String
  feedId      Int
  published   DateTime
  updatedAt   DateTime? @updatedAt
  createdAt   DateTime? @default(now())

  metadata Metadata[]
  feed     Feed       @relation(fields: [feedId], references: [id], onDelete: Cascade)
}

model User {
  id       Int        @id @unique @default(autoincrement())
  timeZone String
  account  Account?
  metadata Metadata[]
  Feed     Feed[]
}

model Account {
  id       Int    @id @unique @default(autoincrement())
  username String
  password String
  userId   Int    @unique
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Metadata {
  userId  Int
  entryId Int
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  entry   Entry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  read    Boolean @default(false)
  starred Boolean @default(false)

  @@unique([userId, entryId])
  @@index([userId, entryId])
}
